/*
 * Copyright 2017-2018 Deltix, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: "java"

sourceCompatibility=1.7
targetCompatibility=1.7

buildscript {
    repositories {
        mavenCentral()
    }
}

repositories {
    mavenCentral()
}

dependencies {
    testCompile 'com.google.code.java-allocation-instrumenter:java-allocation-instrumenter:3.1.0'
    testCompile group: "junit", name: "junit", version: "4.+"
    testCompile group: "com.fasterxml.jackson.core", name: "jackson-databind", version: "2.9.4"

    testCompile project(':java:deltix-dfp-stub')
    testCompile project(':java:deltix-value-types')
}


test {
    outputs.upToDateWhen { false }
    def disableAllocationDetector = true
    def javaAllocationInstrumenterJar = configurations.testCompile.find {it.name.startsWith('java-allocation-instrumenter')}
    def vtAgentJar = configurations.testCompile.find {it.name.startsWith('deltix-value-types')}

    def valueTypeAgent = '-javaagent:' + vtAgentJar + '=' + rootDir + "/valuetype-tests.json"
    jvmArgs += valueTypeAgent

    def allocationAgent = '-javaagent:' + javaAllocationInstrumenterJar

    if(disableAllocationDetector) {
        jvmArgs += '-Ddisable.allocation.detector=true'
    } else {
        jvmArgs += allocationAgent
    }

    testLogging {
        exceptionFormat 'full'
        events "passed", "skipped", "failed", "standardOut", "standardError"
    }
}